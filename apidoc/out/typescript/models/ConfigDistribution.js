"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigDistributionToJSON = exports.ConfigDistributionFromJSONTyped = exports.ConfigDistributionFromJSON = exports.instanceOfConfigDistribution = void 0;
var CommonAppStatus_1 = require("./CommonAppStatus");
var ConfigClusterTarget_1 = require("./ConfigClusterTarget");
var ConfigNamespacedName_1 = require("./ConfigNamespacedName");
var TypesNamespacedName_1 = require("./TypesNamespacedName");
/**
 * Check if a given object implements the ConfigDistribution interface.
 */
function instanceOfConfigDistribution(value) {
    var isInstance = true;
    isInstance = isInstance && "application" in value;
    isInstance = isInstance && "configs" in value;
    isInstance = isInstance && "createdTime" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "namespace" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "targets" in value;
    return isInstance;
}
exports.instanceOfConfigDistribution = instanceOfConfigDistribution;
function ConfigDistributionFromJSON(json) {
    return ConfigDistributionFromJSONTyped(json, false);
}
exports.ConfigDistributionFromJSON = ConfigDistributionFromJSON;
function ConfigDistributionFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'application': (0, TypesNamespacedName_1.TypesNamespacedNameFromJSON)(json['application']),
        'configs': (json['configs'].map(ConfigNamespacedName_1.ConfigNamespacedNameFromJSON)),
        'createdTime': (new Date(json['createdTime'])),
        'name': json['name'],
        'namespace': json['namespace'],
        'status': (0, CommonAppStatus_1.CommonAppStatusFromJSON)(json['status']),
        'targets': (json['targets'].map(ConfigClusterTarget_1.ConfigClusterTargetFromJSON)),
    };
}
exports.ConfigDistributionFromJSONTyped = ConfigDistributionFromJSONTyped;
function ConfigDistributionToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'application': (0, TypesNamespacedName_1.TypesNamespacedNameToJSON)(value.application),
        'configs': (value.configs.map(ConfigNamespacedName_1.ConfigNamespacedNameToJSON)),
        'createdTime': (value.createdTime.toISOString()),
        'name': value.name,
        'namespace': value.namespace,
        'status': (0, CommonAppStatus_1.CommonAppStatusToJSON)(value.status),
        'targets': (value.targets.map(ConfigClusterTarget_1.ConfigClusterTargetToJSON)),
    };
}
exports.ConfigDistributionToJSON = ConfigDistributionToJSON;

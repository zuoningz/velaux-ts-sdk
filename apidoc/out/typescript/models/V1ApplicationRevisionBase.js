"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.V1ApplicationRevisionBaseToJSON = exports.V1ApplicationRevisionBaseFromJSONTyped = exports.V1ApplicationRevisionBaseFromJSON = exports.instanceOfV1ApplicationRevisionBase = void 0;
var runtime_1 = require("../runtime");
var ModelCodeInfo_1 = require("./ModelCodeInfo");
var ModelImageInfo_1 = require("./ModelImageInfo");
var V1NameAlias_1 = require("./V1NameAlias");
/**
 * Check if a given object implements the V1ApplicationRevisionBase interface.
 */
function instanceOfV1ApplicationRevisionBase(value) {
    var isInstance = true;
    isInstance = isInstance && "createTime" in value;
    isInstance = isInstance && "envName" in value;
    isInstance = isInstance && "note" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "triggerType" in value;
    isInstance = isInstance && "version" in value;
    isInstance = isInstance && "workflowName" in value;
    return isInstance;
}
exports.instanceOfV1ApplicationRevisionBase = instanceOfV1ApplicationRevisionBase;
function V1ApplicationRevisionBaseFromJSON(json) {
    return V1ApplicationRevisionBaseFromJSONTyped(json, false);
}
exports.V1ApplicationRevisionBaseFromJSON = V1ApplicationRevisionBaseFromJSON;
function V1ApplicationRevisionBaseFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'codeInfo': !(0, runtime_1.exists)(json, 'codeInfo') ? undefined : (0, ModelCodeInfo_1.ModelCodeInfoFromJSON)(json['codeInfo']),
        'createTime': (new Date(json['createTime'])),
        'deployUser': !(0, runtime_1.exists)(json, 'deployUser') ? undefined : (0, V1NameAlias_1.V1NameAliasFromJSON)(json['deployUser']),
        'envName': json['envName'],
        'imageInfo': !(0, runtime_1.exists)(json, 'imageInfo') ? undefined : (0, ModelImageInfo_1.ModelImageInfoFromJSON)(json['imageInfo']),
        'note': json['note'],
        'reason': !(0, runtime_1.exists)(json, 'reason') ? undefined : json['reason'],
        'status': json['status'],
        'triggerType': json['triggerType'],
        'version': json['version'],
        'workflowName': json['workflowName'],
    };
}
exports.V1ApplicationRevisionBaseFromJSONTyped = V1ApplicationRevisionBaseFromJSONTyped;
function V1ApplicationRevisionBaseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'codeInfo': (0, ModelCodeInfo_1.ModelCodeInfoToJSON)(value.codeInfo),
        'createTime': (value.createTime.toISOString()),
        'deployUser': (0, V1NameAlias_1.V1NameAliasToJSON)(value.deployUser),
        'envName': value.envName,
        'imageInfo': (0, ModelImageInfo_1.ModelImageInfoToJSON)(value.imageInfo),
        'note': value.note,
        'reason': value.reason,
        'status': value.status,
        'triggerType': value.triggerType,
        'version': value.version,
        'workflowName': value.workflowName,
    };
}
exports.V1ApplicationRevisionBaseToJSON = V1ApplicationRevisionBaseToJSON;

"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ModelApplicationRevisionToJSON = exports.ModelApplicationRevisionFromJSONTyped = exports.ModelApplicationRevisionFromJSON = exports.instanceOfModelApplicationRevision = void 0;
var runtime_1 = require("../runtime");
var ModelCodeInfo_1 = require("./ModelCodeInfo");
var ModelImageInfo_1 = require("./ModelImageInfo");
/**
 * Check if a given object implements the ModelApplicationRevision interface.
 */
function instanceOfModelApplicationRevision(value) {
    var isInstance = true;
    isInstance = isInstance && "appPrimaryKey" in value;
    isInstance = isInstance && "createTime" in value;
    isInstance = isInstance && "deployUser" in value;
    isInstance = isInstance && "envName" in value;
    isInstance = isInstance && "note" in value;
    isInstance = isInstance && "reason" in value;
    isInstance = isInstance && "revisionCRName" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "triggerType" in value;
    isInstance = isInstance && "updateTime" in value;
    isInstance = isInstance && "version" in value;
    isInstance = isInstance && "workflowName" in value;
    return isInstance;
}
exports.instanceOfModelApplicationRevision = instanceOfModelApplicationRevision;
function ModelApplicationRevisionFromJSON(json) {
    return ModelApplicationRevisionFromJSONTyped(json, false);
}
exports.ModelApplicationRevisionFromJSON = ModelApplicationRevisionFromJSON;
function ModelApplicationRevisionFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'appPrimaryKey': json['appPrimaryKey'],
        'applyAppConfig': !(0, runtime_1.exists)(json, 'applyAppConfig') ? undefined : json['applyAppConfig'],
        'codeInfo': !(0, runtime_1.exists)(json, 'codeInfo') ? undefined : (0, ModelCodeInfo_1.ModelCodeInfoFromJSON)(json['codeInfo']),
        'createTime': (new Date(json['createTime'])),
        'deployUser': json['deployUser'],
        'envName': json['envName'],
        'imageInfo': !(0, runtime_1.exists)(json, 'imageInfo') ? undefined : (0, ModelImageInfo_1.ModelImageInfoFromJSON)(json['imageInfo']),
        'note': json['note'],
        'reason': json['reason'],
        'revisionCRName': json['revisionCRName'],
        'rollbackVersion': !(0, runtime_1.exists)(json, 'rollbackVersion') ? undefined : json['rollbackVersion'],
        'status': json['status'],
        'triggerType': json['triggerType'],
        'updateTime': (new Date(json['updateTime'])),
        'version': json['version'],
        'workflowName': json['workflowName'],
    };
}
exports.ModelApplicationRevisionFromJSONTyped = ModelApplicationRevisionFromJSONTyped;
function ModelApplicationRevisionToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'appPrimaryKey': value.appPrimaryKey,
        'applyAppConfig': value.applyAppConfig,
        'codeInfo': (0, ModelCodeInfo_1.ModelCodeInfoToJSON)(value.codeInfo),
        'createTime': (value.createTime.toISOString()),
        'deployUser': value.deployUser,
        'envName': value.envName,
        'imageInfo': (0, ModelImageInfo_1.ModelImageInfoToJSON)(value.imageInfo),
        'note': value.note,
        'reason': value.reason,
        'revisionCRName': value.revisionCRName,
        'rollbackVersion': value.rollbackVersion,
        'status': value.status,
        'triggerType': value.triggerType,
        'updateTime': (value.updateTime.toISOString()),
        'version': value.version,
        'workflowName': value.workflowName,
    };
}
exports.ModelApplicationRevisionToJSON = ModelApplicationRevisionToJSON;

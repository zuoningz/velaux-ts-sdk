"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.V1ConfigFileToJSON = exports.V1ConfigFileFromJSONTyped = exports.V1ConfigFileFromJSON = exports.instanceOfV1ConfigFile = void 0;
var runtime_1 = require("../runtime");
var V1Config_1 = require("./V1Config");
var V1History_1 = require("./V1History");
var V1RootFS_1 = require("./V1RootFS");
/**
 * Check if a given object implements the V1ConfigFile interface.
 */
function instanceOfV1ConfigFile(value) {
    var isInstance = true;
    isInstance = isInstance && "architecture" in value;
    isInstance = isInstance && "config" in value;
    isInstance = isInstance && "os" in value;
    isInstance = isInstance && "rootfs" in value;
    return isInstance;
}
exports.instanceOfV1ConfigFile = instanceOfV1ConfigFile;
function V1ConfigFileFromJSON(json) {
    return V1ConfigFileFromJSONTyped(json, false);
}
exports.V1ConfigFileFromJSON = V1ConfigFileFromJSON;
function V1ConfigFileFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'architecture': json['architecture'],
        'author': !(0, runtime_1.exists)(json, 'author') ? undefined : json['author'],
        'config': (0, V1Config_1.V1ConfigFromJSON)(json['config']),
        'container': !(0, runtime_1.exists)(json, 'container') ? undefined : json['container'],
        'created': !(0, runtime_1.exists)(json, 'created') ? undefined : json['created'],
        'dockerVersion': !(0, runtime_1.exists)(json, 'docker_version') ? undefined : json['docker_version'],
        'history': !(0, runtime_1.exists)(json, 'history') ? undefined : (json['history'].map(V1History_1.V1HistoryFromJSON)),
        'os': json['os'],
        'osVersion': !(0, runtime_1.exists)(json, 'os.version') ? undefined : json['os.version'],
        'rootfs': (0, V1RootFS_1.V1RootFSFromJSON)(json['rootfs']),
        'variant': !(0, runtime_1.exists)(json, 'variant') ? undefined : json['variant'],
    };
}
exports.V1ConfigFileFromJSONTyped = V1ConfigFileFromJSONTyped;
function V1ConfigFileToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'architecture': value.architecture,
        'author': value.author,
        'config': (0, V1Config_1.V1ConfigToJSON)(value.config),
        'container': value.container,
        'created': value.created,
        'docker_version': value.dockerVersion,
        'history': value.history === undefined ? undefined : (value.history.map(V1History_1.V1HistoryToJSON)),
        'os': value.os,
        'os.version': value.osVersion,
        'rootfs': (0, V1RootFS_1.V1RootFSToJSON)(value.rootfs),
        'variant': value.variant,
    };
}
exports.V1ConfigFileToJSON = V1ConfigFileToJSON;

/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CommonCUE } from './CommonCUE';
import {
    CommonCUEFromJSON,
    CommonCUEFromJSONTyped,
    CommonCUEToJSON,
} from './CommonCUE';
import type { CommonHelm } from './CommonHelm';
import {
    CommonHelmFromJSON,
    CommonHelmFromJSONTyped,
    CommonHelmToJSON,
} from './CommonHelm';
import type { CommonKube } from './CommonKube';
import {
    CommonKubeFromJSON,
    CommonKubeFromJSONTyped,
    CommonKubeToJSON,
} from './CommonKube';
import type { CommonTerraform } from './CommonTerraform';
import {
    CommonTerraformFromJSON,
    CommonTerraformFromJSONTyped,
    CommonTerraformToJSON,
} from './CommonTerraform';

/**
 * 
 * @export
 * @interface CommonSchematic
 */
export interface CommonSchematic {
    /**
     * 
     * @type {CommonCUE}
     * @memberof CommonSchematic
     */
    cue?: CommonCUE;
    /**
     * 
     * @type {CommonHelm}
     * @memberof CommonSchematic
     */
    helm?: CommonHelm;
    /**
     * 
     * @type {CommonKube}
     * @memberof CommonSchematic
     */
    kube?: CommonKube;
    /**
     * 
     * @type {CommonTerraform}
     * @memberof CommonSchematic
     */
    terraform?: CommonTerraform;
}

/**
 * Check if a given object implements the CommonSchematic interface.
 */
export function instanceOfCommonSchematic(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CommonSchematicFromJSON(json: any): CommonSchematic {
    return CommonSchematicFromJSONTyped(json, false);
}

export function CommonSchematicFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommonSchematic {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cue': !exists(json, 'cue') ? undefined : CommonCUEFromJSON(json['cue']),
        'helm': !exists(json, 'helm') ? undefined : CommonHelmFromJSON(json['helm']),
        'kube': !exists(json, 'kube') ? undefined : CommonKubeFromJSON(json['kube']),
        'terraform': !exists(json, 'terraform') ? undefined : CommonTerraformFromJSON(json['terraform']),
    };
}

export function CommonSchematicToJSON(value?: CommonSchematic | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cue': CommonCUEToJSON(value.cue),
        'helm': CommonHelmToJSON(value.helm),
        'kube': CommonKubeToJSON(value.kube),
        'terraform': CommonTerraformToJSON(value.terraform),
    };
}


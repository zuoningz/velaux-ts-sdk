"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.V1DetailAddonResponseToJSON = exports.V1DetailAddonResponseFromJSONTyped = exports.V1DetailAddonResponseFromJSON = exports.instanceOfV1DetailAddonResponse = void 0;
var runtime_1 = require("../runtime");
var AddonDependency_1 = require("./AddonDependency");
var AddonDeployTo_1 = require("./AddonDeployTo");
var AddonSystemRequirements_1 = require("./AddonSystemRequirements");
var SchemaUIParameter_1 = require("./SchemaUIParameter");
var V1AddonDefinition_1 = require("./V1AddonDefinition");
/**
 * Check if a given object implements the V1DetailAddonResponse interface.
 */
function instanceOfV1DetailAddonResponse(value) {
    var isInstance = true;
    isInstance = isInstance && "availableVersions" in value;
    isInstance = isInstance && "definitions" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "icon" in value;
    isInstance = isInstance && "invisible" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "schema" in value;
    isInstance = isInstance && "uiSchema" in value;
    isInstance = isInstance && "version" in value;
    return isInstance;
}
exports.instanceOfV1DetailAddonResponse = instanceOfV1DetailAddonResponse;
function V1DetailAddonResponseFromJSON(json) {
    return V1DetailAddonResponseFromJSONTyped(json, false);
}
exports.V1DetailAddonResponseFromJSON = V1DetailAddonResponseFromJSON;
function V1DetailAddonResponseFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'availableVersions': json['availableVersions'],
        'definitions': (json['definitions'].map(V1AddonDefinition_1.V1AddonDefinitionFromJSON)),
        'dependencies': !(0, runtime_1.exists)(json, 'dependencies') ? undefined : (json['dependencies'].map(AddonDependency_1.AddonDependencyFromJSON)),
        'deployTo': !(0, runtime_1.exists)(json, 'deployTo') ? undefined : (0, AddonDeployTo_1.AddonDeployToFromJSON)(json['deployTo']),
        'description': json['description'],
        'detail': !(0, runtime_1.exists)(json, 'detail') ? undefined : json['detail'],
        'icon': json['icon'],
        'invisible': json['invisible'],
        'name': json['name'],
        'needNamespace': !(0, runtime_1.exists)(json, 'needNamespace') ? undefined : json['needNamespace'],
        'registryName': !(0, runtime_1.exists)(json, 'registryName') ? undefined : json['registryName'],
        'schema': json['schema'],
        'system': !(0, runtime_1.exists)(json, 'system') ? undefined : (0, AddonSystemRequirements_1.AddonSystemRequirementsFromJSON)(json['system']),
        'tags': !(0, runtime_1.exists)(json, 'tags') ? undefined : json['tags'],
        'uiSchema': (json['uiSchema'].map(SchemaUIParameter_1.SchemaUIParameterFromJSON)),
        'url': !(0, runtime_1.exists)(json, 'url') ? undefined : json['url'],
        'version': json['version'],
    };
}
exports.V1DetailAddonResponseFromJSONTyped = V1DetailAddonResponseFromJSONTyped;
function V1DetailAddonResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'availableVersions': value.availableVersions,
        'definitions': (value.definitions.map(V1AddonDefinition_1.V1AddonDefinitionToJSON)),
        'dependencies': value.dependencies === undefined ? undefined : (value.dependencies.map(AddonDependency_1.AddonDependencyToJSON)),
        'deployTo': (0, AddonDeployTo_1.AddonDeployToToJSON)(value.deployTo),
        'description': value.description,
        'detail': value.detail,
        'icon': value.icon,
        'invisible': value.invisible,
        'name': value.name,
        'needNamespace': value.needNamespace,
        'registryName': value.registryName,
        'schema': value.schema,
        'system': (0, AddonSystemRequirements_1.AddonSystemRequirementsToJSON)(value.system),
        'tags': value.tags,
        'uiSchema': (value.uiSchema.map(SchemaUIParameter_1.SchemaUIParameterToJSON)),
        'url': value.url,
        'version': value.version,
    };
}
exports.V1DetailAddonResponseToJSON = V1DetailAddonResponseToJSON;

"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.V1ConfigToJSON = exports.V1ConfigFromJSONTyped = exports.V1ConfigFromJSON = exports.instanceOfV1Config = void 0;
var runtime_1 = require("../runtime");
var V1HealthConfig_1 = require("./V1HealthConfig");
/**
 * Check if a given object implements the V1Config interface.
 */
function instanceOfV1Config(value) {
    var isInstance = true;
    return isInstance;
}
exports.instanceOfV1Config = instanceOfV1Config;
function V1ConfigFromJSON(json) {
    return V1ConfigFromJSONTyped(json, false);
}
exports.V1ConfigFromJSON = V1ConfigFromJSON;
function V1ConfigFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'argsEscaped': !(0, runtime_1.exists)(json, 'ArgsEscaped') ? undefined : json['ArgsEscaped'],
        'attachStderr': !(0, runtime_1.exists)(json, 'AttachStderr') ? undefined : json['AttachStderr'],
        'attachStdin': !(0, runtime_1.exists)(json, 'AttachStdin') ? undefined : json['AttachStdin'],
        'attachStdout': !(0, runtime_1.exists)(json, 'AttachStdout') ? undefined : json['AttachStdout'],
        'cmd': !(0, runtime_1.exists)(json, 'Cmd') ? undefined : json['Cmd'],
        'domainname': !(0, runtime_1.exists)(json, 'Domainname') ? undefined : json['Domainname'],
        'entrypoint': !(0, runtime_1.exists)(json, 'Entrypoint') ? undefined : json['Entrypoint'],
        'env': !(0, runtime_1.exists)(json, 'Env') ? undefined : json['Env'],
        'exposedPorts': !(0, runtime_1.exists)(json, 'ExposedPorts') ? undefined : json['ExposedPorts'],
        'healthcheck': !(0, runtime_1.exists)(json, 'Healthcheck') ? undefined : (0, V1HealthConfig_1.V1HealthConfigFromJSON)(json['Healthcheck']),
        'hostname': !(0, runtime_1.exists)(json, 'Hostname') ? undefined : json['Hostname'],
        'image': !(0, runtime_1.exists)(json, 'Image') ? undefined : json['Image'],
        'labels': !(0, runtime_1.exists)(json, 'Labels') ? undefined : json['Labels'],
        'macAddress': !(0, runtime_1.exists)(json, 'MacAddress') ? undefined : json['MacAddress'],
        'networkDisabled': !(0, runtime_1.exists)(json, 'NetworkDisabled') ? undefined : json['NetworkDisabled'],
        'onBuild': !(0, runtime_1.exists)(json, 'OnBuild') ? undefined : json['OnBuild'],
        'openStdin': !(0, runtime_1.exists)(json, 'OpenStdin') ? undefined : json['OpenStdin'],
        'shell': !(0, runtime_1.exists)(json, 'Shell') ? undefined : json['Shell'],
        'stdinOnce': !(0, runtime_1.exists)(json, 'StdinOnce') ? undefined : json['StdinOnce'],
        'stopSignal': !(0, runtime_1.exists)(json, 'StopSignal') ? undefined : json['StopSignal'],
        'tty': !(0, runtime_1.exists)(json, 'Tty') ? undefined : json['Tty'],
        'user': !(0, runtime_1.exists)(json, 'User') ? undefined : json['User'],
        'volumes': !(0, runtime_1.exists)(json, 'Volumes') ? undefined : json['Volumes'],
        'workingDir': !(0, runtime_1.exists)(json, 'WorkingDir') ? undefined : json['WorkingDir'],
    };
}
exports.V1ConfigFromJSONTyped = V1ConfigFromJSONTyped;
function V1ConfigToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'ArgsEscaped': value.argsEscaped,
        'AttachStderr': value.attachStderr,
        'AttachStdin': value.attachStdin,
        'AttachStdout': value.attachStdout,
        'Cmd': value.cmd,
        'Domainname': value.domainname,
        'Entrypoint': value.entrypoint,
        'Env': value.env,
        'ExposedPorts': value.exposedPorts,
        'Healthcheck': (0, V1HealthConfig_1.V1HealthConfigToJSON)(value.healthcheck),
        'Hostname': value.hostname,
        'Image': value.image,
        'Labels': value.labels,
        'MacAddress': value.macAddress,
        'NetworkDisabled': value.networkDisabled,
        'OnBuild': value.onBuild,
        'OpenStdin': value.openStdin,
        'Shell': value.shell,
        'StdinOnce': value.stdinOnce,
        'StopSignal': value.stopSignal,
        'Tty': value.tty,
        'User': value.user,
        'Volumes': value.volumes,
        'WorkingDir': value.workingDir,
    };
}
exports.V1ConfigToJSON = V1ConfigToJSON;

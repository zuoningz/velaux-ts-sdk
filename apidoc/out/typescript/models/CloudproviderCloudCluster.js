"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CloudproviderCloudClusterToJSON = exports.CloudproviderCloudClusterFromJSONTyped = exports.CloudproviderCloudClusterFromJSON = exports.instanceOfCloudproviderCloudCluster = void 0;
/**
 * Check if a given object implements the CloudproviderCloudCluster interface.
 */
function instanceOfCloudproviderCloudCluster(value) {
    var isInstance = true;
    isInstance = isInstance && "apiServerURL" in value;
    isInstance = isInstance && "dashboardURL" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "labels" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "provider" in value;
    isInstance = isInstance && "regionID" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "vpcID" in value;
    isInstance = isInstance && "zone" in value;
    isInstance = isInstance && "zoneID" in value;
    return isInstance;
}
exports.instanceOfCloudproviderCloudCluster = instanceOfCloudproviderCloudCluster;
function CloudproviderCloudClusterFromJSON(json) {
    return CloudproviderCloudClusterFromJSONTyped(json, false);
}
exports.CloudproviderCloudClusterFromJSON = CloudproviderCloudClusterFromJSON;
function CloudproviderCloudClusterFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'apiServerURL': json['apiServerURL'],
        'dashboardURL': json['dashboardURL'],
        'id': json['id'],
        'labels': json['labels'],
        'name': json['name'],
        'provider': json['provider'],
        'regionID': json['regionID'],
        'status': json['status'],
        'type': json['type'],
        'vpcID': json['vpcID'],
        'zone': json['zone'],
        'zoneID': json['zoneID'],
    };
}
exports.CloudproviderCloudClusterFromJSONTyped = CloudproviderCloudClusterFromJSONTyped;
function CloudproviderCloudClusterToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'apiServerURL': value.apiServerURL,
        'dashboardURL': value.dashboardURL,
        'id': value.id,
        'labels': value.labels,
        'name': value.name,
        'provider': value.provider,
        'regionID': value.regionID,
        'status': value.status,
        'type': value.type,
        'vpcID': value.vpcID,
        'zone': value.zone,
        'zoneID': value.zoneID,
    };
}
exports.CloudproviderCloudClusterToJSON = CloudproviderCloudClusterToJSON;

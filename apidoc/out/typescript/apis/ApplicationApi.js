"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApplicationApi = void 0;
var runtime = require("../runtime");
var index_1 = require("../models/index");
/**
 *
 */
var ApplicationApi = /** @class */ (function (_super) {
    __extends(ApplicationApi, _super);
    function ApplicationApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * add trait for a component
     */
    ApplicationApi.prototype.addApplicationTraitRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling addApplicationTrait.');
                        }
                        if (requestParameters.compName === null || requestParameters.compName === undefined) {
                            throw new runtime.RequiredError('compName', 'Required parameter requestParameters.compName was null or undefined when calling addApplicationTrait.');
                        }
                        if (requestParameters.body === null || requestParameters.body === undefined) {
                            throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling addApplicationTrait.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/xml';
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/components/{compName}/traits".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))).replace("{".concat("compName", "}"), encodeURIComponent(String(requestParameters.compName))),
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.V1CreateApplicationTraitRequestToJSON)(requestParameters.body),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response)];
                }
            });
        });
    };
    /**
     * add trait for a component
     */
    ApplicationApi.prototype.addApplicationTrait = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.addApplicationTraitRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * detail one application
     */
    ApplicationApi.prototype.applicationStatisticsRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling applicationStatistics.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/statistics".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))),
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1ApplicationStatisticsResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * detail one application
     */
    ApplicationApi.prototype.applicationStatistics = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.applicationStatisticsRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * compare application
     */
    ApplicationApi.prototype.compareAppRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling compareApp.');
                        }
                        if (requestParameters.body === null || requestParameters.body === undefined) {
                            throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling compareApp.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/xml';
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/compare".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))),
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.V1AppCompareReqToJSON)(requestParameters.body),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1AppCompareResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * compare application
     */
    ApplicationApi.prototype.compareApp = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.compareAppRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * create one application
     */
    ApplicationApi.prototype.createApplicationRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.body === null || requestParameters.body === undefined) {
                            throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling createApplication.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/xml';
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications",
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.V1CreateApplicationRequestToJSON)(requestParameters.body),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1ApplicationBaseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * create one application
     */
    ApplicationApi.prototype.createApplication = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.createApplicationRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * creating an application environment
     */
    ApplicationApi.prototype.createApplicationEnvRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling createApplicationEnv.');
                        }
                        if (requestParameters.body === null || requestParameters.body === undefined) {
                            throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling createApplicationEnv.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/xml';
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/envs".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))),
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.V1CreateApplicationEnvbindingRequestToJSON)(requestParameters.body),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1EnvBindingFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * creating an application environment
     */
    ApplicationApi.prototype.createApplicationEnv = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.createApplicationEnvRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * create policy for application
     */
    ApplicationApi.prototype.createApplicationPolicyRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling createApplicationPolicy.');
                        }
                        if (requestParameters.body === null || requestParameters.body === undefined) {
                            throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling createApplicationPolicy.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/xml';
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/policies".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))),
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.V1CreatePolicyRequestToJSON)(requestParameters.body),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1PolicyBaseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * create policy for application
     */
    ApplicationApi.prototype.createApplicationPolicy = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.createApplicationPolicyRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Create an application trigger
     */
    ApplicationApi.prototype.createApplicationTriggerRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling createApplicationTrigger.');
                        }
                        if (requestParameters.body === null || requestParameters.body === undefined) {
                            throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling createApplicationTrigger.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/xml';
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/triggers".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))),
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.V1CreateApplicationTriggerRequestToJSON)(requestParameters.body),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1ApplicationTriggerBaseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Create an application trigger
     */
    ApplicationApi.prototype.createApplicationTrigger = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.createApplicationTriggerRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * create component  for application
     */
    ApplicationApi.prototype.createComponentRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling createComponent.');
                        }
                        if (requestParameters.body === null || requestParameters.body === undefined) {
                            throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling createComponent.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/xml';
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/components".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))),
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.V1CreateComponentRequestToJSON)(requestParameters.body),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1ComponentBaseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * create component  for application
     */
    ApplicationApi.prototype.createComponent = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.createComponentRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * create application workflow
     */
    ApplicationApi.prototype.createOrUpdateApplicationWorkflowRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling createOrUpdateApplicationWorkflow.');
                        }
                        if (requestParameters.body === null || requestParameters.body === undefined) {
                            throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling createOrUpdateApplicationWorkflow.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/xml';
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/workflows".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))),
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.V1CreateWorkflowRequestToJSON)(requestParameters.body),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1SimpleResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * create application workflow
     */
    ApplicationApi.prototype.createOrUpdateApplicationWorkflow = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.createOrUpdateApplicationWorkflowRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * delete one application
     */
    ApplicationApi.prototype.deleteApplicationRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling deleteApplication.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))),
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response)];
                }
            });
        });
    };
    /**
     * delete one application
     */
    ApplicationApi.prototype.deleteApplication = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.deleteApplicationRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * delete an application environment
     */
    ApplicationApi.prototype.deleteApplicationEnvRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling deleteApplicationEnv.');
                        }
                        if (requestParameters.envName === null || requestParameters.envName === undefined) {
                            throw new runtime.RequiredError('envName', 'Required parameter requestParameters.envName was null or undefined when calling deleteApplicationEnv.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/envs/{envName}".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))).replace("{".concat("envName", "}"), encodeURIComponent(String(requestParameters.envName))),
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response)];
                }
            });
        });
    };
    /**
     * delete an application environment
     */
    ApplicationApi.prototype.deleteApplicationEnv = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.deleteApplicationEnvRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * detail policy for application
     */
    ApplicationApi.prototype.deleteApplicationPolicyRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling deleteApplicationPolicy.');
                        }
                        if (requestParameters.policyName === null || requestParameters.policyName === undefined) {
                            throw new runtime.RequiredError('policyName', 'Required parameter requestParameters.policyName was null or undefined when calling deleteApplicationPolicy.');
                        }
                        queryParameters = {};
                        if (requestParameters.force !== undefined) {
                            queryParameters['force'] = requestParameters.force;
                        }
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/policies/{policyName}".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))).replace("{".concat("policyName", "}"), encodeURIComponent(String(requestParameters.policyName))),
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response)];
                }
            });
        });
    };
    /**
     * detail policy for application
     */
    ApplicationApi.prototype.deleteApplicationPolicy = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.deleteApplicationPolicyRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * delete trait from a component
     */
    ApplicationApi.prototype.deleteApplicationTraitRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling deleteApplicationTrait.');
                        }
                        if (requestParameters.compName === null || requestParameters.compName === undefined) {
                            throw new runtime.RequiredError('compName', 'Required parameter requestParameters.compName was null or undefined when calling deleteApplicationTrait.');
                        }
                        if (requestParameters.traitType === null || requestParameters.traitType === undefined) {
                            throw new runtime.RequiredError('traitType', 'Required parameter requestParameters.traitType was null or undefined when calling deleteApplicationTrait.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/components/{compName}/traits/{traitType}".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))).replace("{".concat("compName", "}"), encodeURIComponent(String(requestParameters.compName))).replace("{".concat("traitType", "}"), encodeURIComponent(String(requestParameters.traitType))),
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1ApplicationTraitFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * delete trait from a component
     */
    ApplicationApi.prototype.deleteApplicationTrait = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.deleteApplicationTraitRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Delete an application trigger
     */
    ApplicationApi.prototype.deleteApplicationTriggerRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling deleteApplicationTrigger.');
                        }
                        if (requestParameters.token === null || requestParameters.token === undefined) {
                            throw new runtime.RequiredError('token', 'Required parameter requestParameters.token was null or undefined when calling deleteApplicationTrigger.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/triggers/{token}".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))).replace("{".concat("token", "}"), encodeURIComponent(String(requestParameters.token))),
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response)];
                }
            });
        });
    };
    /**
     * Delete an application trigger
     */
    ApplicationApi.prototype.deleteApplicationTrigger = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.deleteApplicationTriggerRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * delete a component
     */
    ApplicationApi.prototype.deleteComponentRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling deleteComponent.');
                        }
                        if (requestParameters.compName === null || requestParameters.compName === undefined) {
                            throw new runtime.RequiredError('compName', 'Required parameter requestParameters.compName was null or undefined when calling deleteComponent.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/components/{compName}".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))).replace("{".concat("compName", "}"), encodeURIComponent(String(requestParameters.compName))),
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response)];
                }
            });
        });
    };
    /**
     * delete a component
     */
    ApplicationApi.prototype.deleteComponent = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.deleteComponentRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * deletet workflow
     */
    ApplicationApi.prototype.deleteWorkflowRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling deleteWorkflow.');
                        }
                        if (requestParameters.workflowName === null || requestParameters.workflowName === undefined) {
                            throw new runtime.RequiredError('workflowName', 'Required parameter requestParameters.workflowName was null or undefined when calling deleteWorkflow.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/workflows/{workflowName}".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))).replace("{".concat("workflowName", "}"), encodeURIComponent(String(requestParameters.workflowName))),
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1SimpleResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * deletet workflow
     */
    ApplicationApi.prototype.deleteWorkflow = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.deleteWorkflowRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * deploy or upgrade the application
     */
    ApplicationApi.prototype.deployApplicationRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling deployApplication.');
                        }
                        if (requestParameters.body === null || requestParameters.body === undefined) {
                            throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling deployApplication.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/xml';
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/deploy".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))),
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.V1ApplicationDeployRequestToJSON)(requestParameters.body),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1ApplicationDeployResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * deploy or upgrade the application
     */
    ApplicationApi.prototype.deployApplication = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.deployApplicationRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * detail one application
     */
    ApplicationApi.prototype.detailApplicationRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling detailApplication.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))),
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1DetailApplicationResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * detail one application
     */
    ApplicationApi.prototype.detailApplication = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.detailApplicationRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * detail policy for application
     */
    ApplicationApi.prototype.detailApplicationPolicyRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling detailApplicationPolicy.');
                        }
                        if (requestParameters.policyName === null || requestParameters.policyName === undefined) {
                            throw new runtime.RequiredError('policyName', 'Required parameter requestParameters.policyName was null or undefined when calling detailApplicationPolicy.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/policies/{policyName}".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))).replace("{".concat("policyName", "}"), encodeURIComponent(String(requestParameters.policyName))),
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1DetailPolicyResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * detail policy for application
     */
    ApplicationApi.prototype.detailApplicationPolicy = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.detailApplicationPolicyRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * detail revision for application
     */
    ApplicationApi.prototype.detailApplicationRevisionRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling detailApplicationRevision.');
                        }
                        if (requestParameters.revision === null || requestParameters.revision === undefined) {
                            throw new runtime.RequiredError('revision', 'Required parameter requestParameters.revision was null or undefined when calling detailApplicationRevision.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/revisions/{revision}".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))).replace("{".concat("revision", "}"), encodeURIComponent(String(requestParameters.revision))),
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1DetailRevisionResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * detail revision for application
     */
    ApplicationApi.prototype.detailApplicationRevision = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.detailApplicationRevisionRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * detail component for application
     */
    ApplicationApi.prototype.detailComponentRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling detailComponent.');
                        }
                        if (requestParameters.compName === null || requestParameters.compName === undefined) {
                            throw new runtime.RequiredError('compName', 'Required parameter requestParameters.compName was null or undefined when calling detailComponent.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/components/{compName}".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))).replace("{".concat("compName", "}"), encodeURIComponent(String(requestParameters.compName))),
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1DetailComponentResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * detail component for application
     */
    ApplicationApi.prototype.detailComponent = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.detailComponentRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * detail application workflow
     */
    ApplicationApi.prototype.detailWorkflowRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling detailWorkflow.');
                        }
                        if (requestParameters.workflowName === null || requestParameters.workflowName === undefined) {
                            throw new runtime.RequiredError('workflowName', 'Required parameter requestParameters.workflowName was null or undefined when calling detailWorkflow.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/workflows/{workflowName}".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))).replace("{".concat("workflowName", "}"), encodeURIComponent(String(requestParameters.workflowName))),
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1SimpleResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * detail application workflow
     */
    ApplicationApi.prototype.detailWorkflow = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.detailWorkflowRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * query application workflow execution record detail
     */
    ApplicationApi.prototype.detailWorkflowRecordRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling detailWorkflowRecord.');
                        }
                        if (requestParameters.workflowName === null || requestParameters.workflowName === undefined) {
                            throw new runtime.RequiredError('workflowName', 'Required parameter requestParameters.workflowName was null or undefined when calling detailWorkflowRecord.');
                        }
                        if (requestParameters.record === null || requestParameters.record === undefined) {
                            throw new runtime.RequiredError('record', 'Required parameter requestParameters.record was null or undefined when calling detailWorkflowRecord.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/workflows/{workflowName}/records/{record}".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))).replace("{".concat("workflowName", "}"), encodeURIComponent(String(requestParameters.workflowName))).replace("{".concat("record", "}"), encodeURIComponent(String(requestParameters.record))),
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1SimpleResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * query application workflow execution record detail
     */
    ApplicationApi.prototype.detailWorkflowRecord = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.detailWorkflowRecordRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * dry-run application to latest revision
     */
    ApplicationApi.prototype.dryRunAppOrRevisionRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling dryRunAppOrRevision.');
                        }
                        if (requestParameters.body === null || requestParameters.body === undefined) {
                            throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling dryRunAppOrRevision.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/xml';
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/dry-run".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))),
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.V1AppDryRunReqToJSON)(requestParameters.body),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1AppDryRunResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * dry-run application to latest revision
     */
    ApplicationApi.prototype.dryRunAppOrRevision = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.dryRunAppOrRevisionRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * get application status
     */
    ApplicationApi.prototype.getApplicationStatusRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling getApplicationStatus.');
                        }
                        if (requestParameters.envName === null || requestParameters.envName === undefined) {
                            throw new runtime.RequiredError('envName', 'Required parameter requestParameters.envName was null or undefined when calling getApplicationStatus.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/envs/{envName}/status".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))).replace("{".concat("envName", "}"), encodeURIComponent(String(requestParameters.envName))),
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1ApplicationStatusResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * get application status
     */
    ApplicationApi.prototype.getApplicationStatus = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getApplicationStatusRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * get the workflow step inputs
     */
    ApplicationApi.prototype.getWorkflowRecordInputsRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling getWorkflowRecordInputs.');
                        }
                        if (requestParameters.workflowName === null || requestParameters.workflowName === undefined) {
                            throw new runtime.RequiredError('workflowName', 'Required parameter requestParameters.workflowName was null or undefined when calling getWorkflowRecordInputs.');
                        }
                        if (requestParameters.record === null || requestParameters.record === undefined) {
                            throw new runtime.RequiredError('record', 'Required parameter requestParameters.record was null or undefined when calling getWorkflowRecordInputs.');
                        }
                        if (requestParameters.step === null || requestParameters.step === undefined) {
                            throw new runtime.RequiredError('step', 'Required parameter requestParameters.step was null or undefined when calling getWorkflowRecordInputs.');
                        }
                        queryParameters = {};
                        if (requestParameters.step !== undefined) {
                            queryParameters['step'] = requestParameters.step;
                        }
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/workflows/{workflowName}/records/{record}/inputs".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))).replace("{".concat("workflowName", "}"), encodeURIComponent(String(requestParameters.workflowName))).replace("{".concat("record", "}"), encodeURIComponent(String(requestParameters.record))),
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1GetPipelineRunInputResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * get the workflow step inputs
     */
    ApplicationApi.prototype.getWorkflowRecordInputs = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getWorkflowRecordInputsRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * get the workflow step logs
     */
    ApplicationApi.prototype.getWorkflowRecordLogsRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling getWorkflowRecordLogs.');
                        }
                        if (requestParameters.workflowName === null || requestParameters.workflowName === undefined) {
                            throw new runtime.RequiredError('workflowName', 'Required parameter requestParameters.workflowName was null or undefined when calling getWorkflowRecordLogs.');
                        }
                        if (requestParameters.record === null || requestParameters.record === undefined) {
                            throw new runtime.RequiredError('record', 'Required parameter requestParameters.record was null or undefined when calling getWorkflowRecordLogs.');
                        }
                        if (requestParameters.step === null || requestParameters.step === undefined) {
                            throw new runtime.RequiredError('step', 'Required parameter requestParameters.step was null or undefined when calling getWorkflowRecordLogs.');
                        }
                        queryParameters = {};
                        if (requestParameters.step !== undefined) {
                            queryParameters['step'] = requestParameters.step;
                        }
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/workflows/{workflowName}/records/{record}/logs".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))).replace("{".concat("workflowName", "}"), encodeURIComponent(String(requestParameters.workflowName))).replace("{".concat("record", "}"), encodeURIComponent(String(requestParameters.record))),
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.VoidApiResponse(response)];
                }
            });
        });
    };
    /**
     * get the workflow step logs
     */
    ApplicationApi.prototype.getWorkflowRecordLogs = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getWorkflowRecordLogsRaw(requestParameters, initOverrides)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * get the workflow step inputs
     */
    ApplicationApi.prototype.getWorkflowRecordOutputsRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling getWorkflowRecordOutputs.');
                        }
                        if (requestParameters.workflowName === null || requestParameters.workflowName === undefined) {
                            throw new runtime.RequiredError('workflowName', 'Required parameter requestParameters.workflowName was null or undefined when calling getWorkflowRecordOutputs.');
                        }
                        if (requestParameters.record === null || requestParameters.record === undefined) {
                            throw new runtime.RequiredError('record', 'Required parameter requestParameters.record was null or undefined when calling getWorkflowRecordOutputs.');
                        }
                        if (requestParameters.step === null || requestParameters.step === undefined) {
                            throw new runtime.RequiredError('step', 'Required parameter requestParameters.step was null or undefined when calling getWorkflowRecordOutputs.');
                        }
                        queryParameters = {};
                        if (requestParameters.step !== undefined) {
                            queryParameters['step'] = requestParameters.step;
                        }
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/workflows/{workflowName}/records/{record}/outputs".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))).replace("{".concat("workflowName", "}"), encodeURIComponent(String(requestParameters.workflowName))).replace("{".concat("record", "}"), encodeURIComponent(String(requestParameters.record))),
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1GetPipelineRunOutputResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * get the workflow step inputs
     */
    ApplicationApi.prototype.getWorkflowRecordOutputs = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getWorkflowRecordOutputsRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * gets the list of application components
     */
    ApplicationApi.prototype.listApplicationComponentsRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling listApplicationComponents.');
                        }
                        queryParameters = {};
                        if (requestParameters.envName !== undefined) {
                            queryParameters['envName'] = requestParameters.envName;
                        }
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/components".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))),
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1ComponentListResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * gets the list of application components
     */
    ApplicationApi.prototype.listApplicationComponents = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.listApplicationComponentsRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * list policy for application
     */
    ApplicationApi.prototype.listApplicationEnvsRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling listApplicationEnvs.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/envs".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))),
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1ListApplicationEnvBindingFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * list policy for application
     */
    ApplicationApi.prototype.listApplicationEnvs = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.listApplicationEnvsRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * list policy for application
     */
    ApplicationApi.prototype.listApplicationPoliciesRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling listApplicationPolicies.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/policies".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))),
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1ListApplicationPolicyFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * list policy for application
     */
    ApplicationApi.prototype.listApplicationPolicies = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.listApplicationPoliciesRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * list application records
     */
    ApplicationApi.prototype.listApplicationRecordsRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling listApplicationRecords.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/records".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))),
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.VoidApiResponse(response)];
                }
            });
        });
    };
    /**
     * list application records
     */
    ApplicationApi.prototype.listApplicationRecords = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.listApplicationRecordsRaw(requestParameters, initOverrides)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * list revisions for application
     */
    ApplicationApi.prototype.listApplicationRevisionsRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling listApplicationRevisions.');
                        }
                        queryParameters = {};
                        if (requestParameters.envName !== undefined) {
                            queryParameters['envName'] = requestParameters.envName;
                        }
                        if (requestParameters.status !== undefined) {
                            queryParameters['status'] = requestParameters.status;
                        }
                        if (requestParameters.page !== undefined) {
                            queryParameters['page'] = requestParameters.page;
                        }
                        if (requestParameters.pageSize !== undefined) {
                            queryParameters['pageSize'] = requestParameters.pageSize;
                        }
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/revisions".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))),
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1ListRevisionsResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * list revisions for application
     */
    ApplicationApi.prototype.listApplicationRevisions = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.listApplicationRevisionsRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * List the application triggers
     */
    ApplicationApi.prototype.listApplicationTriggersRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling listApplicationTriggers.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/triggers".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))),
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1ListApplicationTriggerResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * List the application triggers
     */
    ApplicationApi.prototype.listApplicationTriggers = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.listApplicationTriggersRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * list application workflow
     */
    ApplicationApi.prototype.listApplicationWorkflowsRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling listApplicationWorkflows.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/workflows".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))),
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1SimpleResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * list application workflow
     */
    ApplicationApi.prototype.listApplicationWorkflows = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.listApplicationWorkflowsRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * list all applications
     */
    ApplicationApi.prototype.listApplicationsRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        queryParameters = {};
                        if (requestParameters.query !== undefined) {
                            queryParameters['query'] = requestParameters.query;
                        }
                        if (requestParameters.project !== undefined) {
                            queryParameters['project'] = requestParameters.project;
                        }
                        if (requestParameters.env !== undefined) {
                            queryParameters['env'] = requestParameters.env;
                        }
                        if (requestParameters.targetName !== undefined) {
                            queryParameters['targetName'] = requestParameters.targetName;
                        }
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications",
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1ListApplicationResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * list all applications
     */
    ApplicationApi.prototype.listApplications = function (requestParameters, initOverrides) {
        if (requestParameters === void 0) { requestParameters = {}; }
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.listApplicationsRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * query application workflow execution record
     */
    ApplicationApi.prototype.listWorkflowRecordsRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling listWorkflowRecords.');
                        }
                        if (requestParameters.workflowName === null || requestParameters.workflowName === undefined) {
                            throw new runtime.RequiredError('workflowName', 'Required parameter requestParameters.workflowName was null or undefined when calling listWorkflowRecords.');
                        }
                        queryParameters = {};
                        if (requestParameters.page !== undefined) {
                            queryParameters['page'] = requestParameters.page;
                        }
                        if (requestParameters.pageSize !== undefined) {
                            queryParameters['pageSize'] = requestParameters.pageSize;
                        }
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/workflows/{workflowName}/records".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))).replace("{".concat("workflowName", "}"), encodeURIComponent(String(requestParameters.workflowName))),
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1SimpleResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * query application workflow execution record
     */
    ApplicationApi.prototype.listWorkflowRecords = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.listWorkflowRecordsRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * create one application template
     */
    ApplicationApi.prototype.publishApplicationTemplateRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling publishApplicationTemplate.');
                        }
                        if (requestParameters.body === null || requestParameters.body === undefined) {
                            throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling publishApplicationTemplate.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/xml';
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/template".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))),
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.V1CreateApplicationTemplateRequestToJSON)(requestParameters.body),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1ApplicationTemplateBaseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * create one application template
     */
    ApplicationApi.prototype.publishApplicationTemplate = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.publishApplicationTemplateRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * recycle application env
     */
    ApplicationApi.prototype.recycleApplicationEnvRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling recycleApplicationEnv.');
                        }
                        if (requestParameters.envName === null || requestParameters.envName === undefined) {
                            throw new runtime.RequiredError('envName', 'Required parameter requestParameters.envName was null or undefined when calling recycleApplicationEnv.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/envs/{envName}/recycle".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))).replace("{".concat("envName", "}"), encodeURIComponent(String(requestParameters.envName))),
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response)];
                }
            });
        });
    };
    /**
     * recycle application env
     */
    ApplicationApi.prototype.recycleApplicationEnv = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.recycleApplicationEnvRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * reset application to latest revision
     */
    ApplicationApi.prototype.resetAppToLatestRevisionRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling resetAppToLatestRevision.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/reset".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))),
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1AppResetResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * reset application to latest revision
     */
    ApplicationApi.prototype.resetAppToLatestRevision = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.resetAppToLatestRevisionRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * resume suspend workflow record
     */
    ApplicationApi.prototype.resumeWorkflowRecordRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling resumeWorkflowRecord.');
                        }
                        if (requestParameters.workflowName === null || requestParameters.workflowName === undefined) {
                            throw new runtime.RequiredError('workflowName', 'Required parameter requestParameters.workflowName was null or undefined when calling resumeWorkflowRecord.');
                        }
                        if (requestParameters.record === null || requestParameters.record === undefined) {
                            throw new runtime.RequiredError('record', 'Required parameter requestParameters.record was null or undefined when calling resumeWorkflowRecord.');
                        }
                        queryParameters = {};
                        if (requestParameters.step !== undefined) {
                            queryParameters['step'] = requestParameters.step;
                        }
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/workflows/{workflowName}/records/{record}/resume".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))).replace("{".concat("workflowName", "}"), encodeURIComponent(String(requestParameters.workflowName))).replace("{".concat("record", "}"), encodeURIComponent(String(requestParameters.record))),
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response)];
                }
            });
        });
    };
    /**
     * resume suspend workflow record
     */
    ApplicationApi.prototype.resumeWorkflowRecord = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.resumeWorkflowRecordRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * detail revision for application
     */
    ApplicationApi.prototype.rollbackApplicationWithRevisionRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling rollbackApplicationWithRevision.');
                        }
                        if (requestParameters.revision === null || requestParameters.revision === undefined) {
                            throw new runtime.RequiredError('revision', 'Required parameter requestParameters.revision was null or undefined when calling rollbackApplicationWithRevision.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/revisions/{revision}/rollback".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))).replace("{".concat("revision", "}"), encodeURIComponent(String(requestParameters.revision))),
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1ApplicationRollbackResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * detail revision for application
     */
    ApplicationApi.prototype.rollbackApplicationWithRevision = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.rollbackApplicationWithRevisionRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * rollback suspend application record
     */
    ApplicationApi.prototype.rollbackWorkflowRecordRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling rollbackWorkflowRecord.');
                        }
                        if (requestParameters.workflowName === null || requestParameters.workflowName === undefined) {
                            throw new runtime.RequiredError('workflowName', 'Required parameter requestParameters.workflowName was null or undefined when calling rollbackWorkflowRecord.');
                        }
                        if (requestParameters.record === null || requestParameters.record === undefined) {
                            throw new runtime.RequiredError('record', 'Required parameter requestParameters.record was null or undefined when calling rollbackWorkflowRecord.');
                        }
                        queryParameters = {};
                        if (requestParameters.rollbackVersion !== undefined) {
                            queryParameters['rollbackVersion'] = requestParameters.rollbackVersion;
                        }
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/workflows/{workflowName}/records/{record}/rollback".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))).replace("{".concat("workflowName", "}"), encodeURIComponent(String(requestParameters.workflowName))).replace("{".concat("record", "}"), encodeURIComponent(String(requestParameters.record))),
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1WorkflowRecordBaseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * rollback suspend application record
     */
    ApplicationApi.prototype.rollbackWorkflowRecord = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.rollbackWorkflowRecordRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * terminate suspend workflow record
     */
    ApplicationApi.prototype.terminateWorkflowRecordRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling terminateWorkflowRecord.');
                        }
                        if (requestParameters.workflowName === null || requestParameters.workflowName === undefined) {
                            throw new runtime.RequiredError('workflowName', 'Required parameter requestParameters.workflowName was null or undefined when calling terminateWorkflowRecord.');
                        }
                        if (requestParameters.record === null || requestParameters.record === undefined) {
                            throw new runtime.RequiredError('record', 'Required parameter requestParameters.record was null or undefined when calling terminateWorkflowRecord.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/workflows/{workflowName}/records/{record}/terminate".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))).replace("{".concat("workflowName", "}"), encodeURIComponent(String(requestParameters.workflowName))).replace("{".concat("record", "}"), encodeURIComponent(String(requestParameters.record))),
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response)];
                }
            });
        });
    };
    /**
     * terminate suspend workflow record
     */
    ApplicationApi.prototype.terminateWorkflowRecord = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.terminateWorkflowRecordRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * update one application
     */
    ApplicationApi.prototype.updateApplicationRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling updateApplication.');
                        }
                        if (requestParameters.body === null || requestParameters.body === undefined) {
                            throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling updateApplication.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/xml';
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))),
                                method: 'PUT',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.V1UpdateApplicationRequestToJSON)(requestParameters.body),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1ApplicationBaseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * update one application
     */
    ApplicationApi.prototype.updateApplication = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.updateApplicationRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * set application  differences in the specified environment
     */
    ApplicationApi.prototype.updateApplicationEnvRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling updateApplicationEnv.');
                        }
                        if (requestParameters.envName === null || requestParameters.envName === undefined) {
                            throw new runtime.RequiredError('envName', 'Required parameter requestParameters.envName was null or undefined when calling updateApplicationEnv.');
                        }
                        if (requestParameters.body === null || requestParameters.body === undefined) {
                            throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling updateApplicationEnv.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/xml';
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/envs/{envName}".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))).replace("{".concat("envName", "}"), encodeURIComponent(String(requestParameters.envName))),
                                method: 'PUT',
                                headers: headerParameters,
                                query: queryParameters,
                                body: requestParameters.body,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1EnvBindingFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * set application  differences in the specified environment
     */
    ApplicationApi.prototype.updateApplicationEnv = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.updateApplicationEnvRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * update policy for application
     */
    ApplicationApi.prototype.updateApplicationPolicyRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling updateApplicationPolicy.');
                        }
                        if (requestParameters.policyName === null || requestParameters.policyName === undefined) {
                            throw new runtime.RequiredError('policyName', 'Required parameter requestParameters.policyName was null or undefined when calling updateApplicationPolicy.');
                        }
                        if (requestParameters.body === null || requestParameters.body === undefined) {
                            throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling updateApplicationPolicy.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/xml';
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/policies/{policyName}".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))).replace("{".concat("policyName", "}"), encodeURIComponent(String(requestParameters.policyName))),
                                method: 'PUT',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.V1UpdatePolicyRequestToJSON)(requestParameters.body),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1DetailPolicyResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * update policy for application
     */
    ApplicationApi.prototype.updateApplicationPolicy = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.updateApplicationPolicyRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * update trait from a component
     */
    ApplicationApi.prototype.updateApplicationTraitRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling updateApplicationTrait.');
                        }
                        if (requestParameters.compName === null || requestParameters.compName === undefined) {
                            throw new runtime.RequiredError('compName', 'Required parameter requestParameters.compName was null or undefined when calling updateApplicationTrait.');
                        }
                        if (requestParameters.traitType === null || requestParameters.traitType === undefined) {
                            throw new runtime.RequiredError('traitType', 'Required parameter requestParameters.traitType was null or undefined when calling updateApplicationTrait.');
                        }
                        if (requestParameters.body === null || requestParameters.body === undefined) {
                            throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling updateApplicationTrait.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/xml';
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/components/{compName}/traits/{traitType}".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))).replace("{".concat("compName", "}"), encodeURIComponent(String(requestParameters.compName))).replace("{".concat("traitType", "}"), encodeURIComponent(String(requestParameters.traitType))),
                                method: 'PUT',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.V1UpdateApplicationTraitRequestToJSON)(requestParameters.body),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1ApplicationTraitFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * update trait from a component
     */
    ApplicationApi.prototype.updateApplicationTrait = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.updateApplicationTraitRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Update an application trigger
     */
    ApplicationApi.prototype.updateApplicationTriggerRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling updateApplicationTrigger.');
                        }
                        if (requestParameters.token === null || requestParameters.token === undefined) {
                            throw new runtime.RequiredError('token', 'Required parameter requestParameters.token was null or undefined when calling updateApplicationTrigger.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/triggers/{token}".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))).replace("{".concat("token", "}"), encodeURIComponent(String(requestParameters.token))),
                                method: 'PUT',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1ApplicationTriggerBaseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Update an application trigger
     */
    ApplicationApi.prototype.updateApplicationTrigger = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.updateApplicationTriggerRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * update component config
     */
    ApplicationApi.prototype.updateComponentRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling updateComponent.');
                        }
                        if (requestParameters.compName === null || requestParameters.compName === undefined) {
                            throw new runtime.RequiredError('compName', 'Required parameter requestParameters.compName was null or undefined when calling updateComponent.');
                        }
                        if (requestParameters.body === null || requestParameters.body === undefined) {
                            throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling updateComponent.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/xml';
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/components/{compName}".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))).replace("{".concat("compName", "}"), encodeURIComponent(String(requestParameters.compName))),
                                method: 'PUT',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.V1UpdateApplicationComponentRequestToJSON)(requestParameters.body),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1ComponentBaseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * update component config
     */
    ApplicationApi.prototype.updateComponent = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.updateComponentRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * update application workflow config
     */
    ApplicationApi.prototype.updateWorkflowRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.appName === null || requestParameters.appName === undefined) {
                            throw new runtime.RequiredError('appName', 'Required parameter requestParameters.appName was null or undefined when calling updateWorkflow.');
                        }
                        if (requestParameters.workflowName === null || requestParameters.workflowName === undefined) {
                            throw new runtime.RequiredError('workflowName', 'Required parameter requestParameters.workflowName was null or undefined when calling updateWorkflow.');
                        }
                        if (requestParameters.body === null || requestParameters.body === undefined) {
                            throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling updateWorkflow.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/xml';
                        return [4 /*yield*/, this.request({
                                path: "/api/v1/applications/{appName}/workflows/{workflowName}".replace("{".concat("appName", "}"), encodeURIComponent(String(requestParameters.appName))).replace("{".concat("workflowName", "}"), encodeURIComponent(String(requestParameters.workflowName))),
                                method: 'PUT',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.V1UpdateWorkflowRequestToJSON)(requestParameters.body),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.V1SimpleResponseFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * update application workflow config
     */
    ApplicationApi.prototype.updateWorkflow = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.updateWorkflowRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return ApplicationApi;
}(runtime.BaseAPI));
exports.ApplicationApi = ApplicationApi;
